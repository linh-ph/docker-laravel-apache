version: '3.8'
services:
  #PHP Service
  qc-systems:
    build:
      context: '.'
      dockerfile: php/Dockerfile
      args:
        uid: 1000
    container_name: qc-systems
    image: qc-systems
    hostname: qc-systems.app
    ports:
      - 8000:80
    environment:
      - APACHE_RUN_USER=#1000
      - APACHE_RUN_GROUP=#1000
    working_dir: /var/www/html
    restart: unless-stopped
    tty: true
    volumes:
      - .:/var/www/html
    networks:
      backend:
        aliases:
          - app

  #MySQL Service
  db:
    image: mysql:5.7.27
    container_name: mysql-db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3307"
    environment:
      MYSQL_DATABASE: qc_systems
      MYSQL_ROOT_PASSWORD: root@123
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      TZ: Asia/Tokyo
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-time-zone=+09:00']
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      backend:
        aliases:
          - app

  #Phpmyadmin
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      - PMA_HOST=db // name servicer of mysql
    networks:
      backend:
        aliases:
          - app
    ports:
      - 8001:80

#Docker Networks
networks:
  backend:
    name: backend-network
    # that way he can solve others containers names even inside, solve nginx-2, for example
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
